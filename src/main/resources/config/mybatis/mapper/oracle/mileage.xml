<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.mybatis.mapper.mileage">

	<insert id="insertMileage" parameterType="mileageVo">
		<selectKey keyProperty="mileageNo" resultType="int"
			order="BEFORE">
			select mileage_seq.nextval from dual
		</selectKey>

		insert into mileage(mileageNo, userid, savingPoint
		, payNo, usePoint, reason
		<if test="savingPoint!=null and savingPoint!='' and savingPoint>0">
			, endDate
		</if>
		)
		values(#{mileageNo}, #{userid}, #{savingPoint}
		, #{payNo}, #{usePoint}, #{reason}
		<if test="savingPoint!=null and savingPoint!='' and savingPoint>0">
			, sysdate+(interval '1' year)
		</if>
		)
	</insert>

	<select id="selectMileageList" parameterType="dateSearchVo"
		resultType="mileageVo">
		select *
		from
		(
		    select rownum as RNUM, A.*
		    from
		    (
		        select * from mileage
				where savingDate>=#{startDay}
				<![CDATA[ and savingDate < to_date(#{endDay})+1]]>
					and userid = #{customerId}
				order by mileageno desc
		    )A
		)
		where RNUM > #{firstRecordIndex} 
		<![CDATA[
		and RNUM<= #{firstRecordIndex} + #{recordCountPerPage}
		]]>	

	</select>


	<select id="selectTotalRecord" parameterType="dateSearchVo"
		resultType="int">
		select count(*) from mileage 
		where savingdate>=#{startDay}
		<![CDATA[ and savingdate < to_Date(#{endDay})+1]]>
		<if test="customerId!=null and customerId!=''">
			and userid = #{customerId}
		</if>
	</select>
	
	<update id="chkMileageLimit" statementType="CALLABLE">
		{CALL
			declare
	
			cnt number;
			
			begin
			    select count(*) into cnt
			    from mileage
			    where not(reason like('set%')) and reason!='기간만료' and
<![CDATA[		to_char(endDate, 'yyyy-mm-dd')<=sysdate;]]>
			    
			    if cnt>0 then
			        merge into "USER"   
			            using
			            (
			                select userid as "sel", sum(savingPoint) "limited"
			                from mileage
			                where not(reason like('set%')) and reason != '기간만료' and
<![CDATA[	                to_char(endDate, 'yyyy-mm-dd')<=sysdate]]>
			                group by userid
			            )b on("USER".userid = b."sel")
			        when matched then
			            update set mileage = mileage - b."limited";
			    
			        insert into mileage(mileageNo, savingPoint
			            , userid, usePoint, endDate,reason)
			        select mileage_seq.nextval, null
			            ,m.userid, m."limited", sysdate
			            , '기간만료'
			        from
			        (
			            select userid, sum(savingPoint) "limited"
			            from mileage
			            where not(reason like('set%')) and reason != '기간만료' and
<![CDATA[			    to_char(endDate, 'yyyy-mm-dd')<=sysdate]]>
			            group by userid
			        )m;
			        
			        update mileage
			        set reason = 'set' || reason
			        where (reason='환불 반환' or reason='구매확정')
<![CDATA[	        and to_char(endDate, 'yyyy-mm-dd')<=sysdate;]]>
			    end if;
			end
		}
	</update>
	<update id="chkMileageLimit1" statementType="CALLABLE">
		{CALL
			declare

			cnt number;
			
			begin
			    select count(*) into cnt
			    from mileage
			    where not(reason like('set%')) and reason!='기간만료' and
<![CDATA[	    to_char(endDate, 'yyyy-mm-dd')<=to_date('2021-02-07 10:05:02', 'yyyy-mm-dd hh24:mi:ss');]]>
			    
			    if cnt>0 then
			        merge into "USER"   
			            using
			            (
			                select userid as "sel", sum(savingPoint) "limited"
			                from mileage
			                where not(reason like('set%')) and reason != '기간만료' and
<![CDATA[	                to_char(endDate, 'yyyy-mm-dd')<=to_date('2021-02-07 10:56:02', 'yyyy-mm-dd hh24:mi:ss')]]>
			                group by userid
			            )b on("USER".userid = b."sel")
			        when matched then
			            update set mileage = mileage - b."limited";
			    
			        insert into mileage(mileageNo, savingPoint
			            , userid, usePoint, endDate,reason)
			        select mileage_seq.nextval, null
			            ,m.userid, m."limited", to_date('2021-02-07 10:56:02', 'yyyy-mm-dd hh24:mi:ss')
			            , '기간만료'
			        from
			        (
			            select userid, sum(savingPoint) "limited"
			            from mileage
			            where not(reason like('set%')) and reason != '기간만료' and
<![CDATA[	            to_char(endDate, 'yyyy-mm-dd')<=to_date('2021-02-07 10:56:02', 'yyyy-mm-dd hh24:mi:ss')]]>
			            group by userid
			        )m;
			        
			        update mileage
			        set reason = 'set' || reason
			        where (reason='환불 반환' or reason='구매확정')
<![CDATA[	        and to_char(endDate, 'yyyy-mm-dd')<=to_date('2021-02-07 10:05:02', 'yyyy-mm-dd hh24:mi:ss');]]>
			    
			    	
			    end if;
			
			end
		}
	</update>
	
</mapper>
